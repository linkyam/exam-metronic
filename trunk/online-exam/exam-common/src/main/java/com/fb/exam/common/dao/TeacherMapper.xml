<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fb.exam.common.dao.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.fb.exam.common.vo.Teacher" >
    <id column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="employee_number" property="employeeNumber" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="professional" property="professional" jdbcType="VARCHAR" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    teacher_id, teacher_name, employee_number, major, professional, degree, comment
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fb.exam.common.vo.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_user_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="begin != null and length != null" >
      limit #{begin} , #{length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user_teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user_teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fb.exam.common.vo.TeacherExample" >
    delete from t_user_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fb.exam.common.vo.Teacher" >
    insert into t_user_teacher (teacher_id, teacher_name, employee_number, 
      major, professional, degree, 
      comment)
    values (#{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{employeeNumber,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{professional,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fb.exam.common.vo.Teacher" >
    insert into t_user_teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="employeeNumber != null" >
        employee_number,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="professional != null" >
        professional,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="comment != null" >
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null" >
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        #{professional,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fb.exam.common.vo.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from t_user_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user_teacher
    <set >
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherName != null" >
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNumber != null" >
        employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.professional != null" >
        professional = #{record.professional,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user_teacher
    set teacher_id = #{record.teacherId,jdbcType=INTEGER},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      professional = #{record.professional,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fb.exam.common.vo.Teacher" >
    update t_user_teacher
    <set >
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null" >
        employee_number = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        professional = #{professional,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fb.exam.common.vo.Teacher" >
    update t_user_teacher
    set teacher_name = #{teacherName,jdbcType=VARCHAR},
      employee_number = #{employeeNumber,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      professional = #{professional,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
</mapper>